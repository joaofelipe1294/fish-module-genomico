<%= render 'layouts/navbar' %>

<div id="single-nucleus-card" class="card col-6 p-0 offset-3" style="display: none;">
  <div class="card-header">
    <span id="channel-paths" hidden></span>
    <span id="nucleus-label" hidden></span>
    <span id="nucleus-id" hidden></span>
    <button id="blue-channel" class="btn btn-primary with-blue">Azul</button>
    <button id="green-channel" class="btn btn-success with-green">Verde</button>
    <button id="red-channel" class="btn btn-danger with-red">Vermelho</button>
    <button id="mark-as-positive" class="btn btn-outline-success ml-5">Marcar como positivo</button>
    <button id="mark-as-negative" class="btn btn-outline-danger ml-5">Marcar como negativo</button>
    <button id="treated" class="btn btn-outline-dark float-right">Tratar</button>
    <button id="original" class="btn btn-outline-info float-right" hidden>Original</button>
  </div>
  <div class="card-body">
    <img id="single-nucleus" src="" class="col-12">
  </div>
</div>

<div id="shade" style="position: absolute; top: 0px; left: 0px; right: 0px; background-color: rgba(0, 0, 0, 0.7); z-index: 2; display: none;">
</div>


<div class="p-5" style="background-color: rgba(0, 0, 0, .65)">
  <% @scanned_cells.each do |cell| %>
    <div id="cell-<%= cell.id %>" class="card d-inline-block  border <%= cell.positive? ? "border-success" : "border-danger"%>" style="margin-left: 15px; margin-bottom: 15px; margin-right: 15px;">
      <%= image_tag cell.rgb, class: "cell", style: {width: 125, height: 125}, data_value: cell.id, data_label: cell.label %>
    </div>
  <% end %>
  <%= render 'layouts/table_footer', elements: @scanned_cells %>
</div>

<script>

  function reset_buttons(){
    let blue = $("#blue-channel");
    if (blue.hasClass('with-blue') === false){
      blue.addClass('with-blue');
      blue.addClass('btn-primary');
      blue.removeClass('btn-outline-primary');
    }
    let green = $("#green-channel");
    if (green.hasClass('with-green') === false){
      green.addClass('with-green');
      green.addClass('btn-success');
      green.removeClass('btn-outline-success');
    }
    let red = $("#red-channel");
    if (red.hasClass('with-red') === false){
      red.addClass('with-red');
      red.addClass('btn-danger');
      red.removeClass('btn-outline-danger');
    }
  }

  function render_image_card(){
    reset_buttons();
    let image_card = $("#single-nucleus-card");
    image_card.css("position", "absolute");
    image_card.css("z-index", "3");
    image_card.css("margin-top", "8%");
    image_card.css("top", $(window).scrollTop());
    image_card.fadeIn(800);
    $("#shade").css('bottom', -1 * $(document).height())
    $('#shade').show();
  }

  function render_rgb_nucleus(cell_id){
    $.ajax({
      url: `/scanned_cells/${cell_id}`,
      success: (response) => {
        $("#channel-paths").text('')
        $("#channel-paths").text((JSON.stringify(response)));
        $("#single-nucleus").attr('src', response.rgb);
        $("#treated").attr('data-value', cell_id);
        $('#original').attr('hidden', 'hidden');
        $('#treated').removeAttr('hidden');
        render_image_card();
      },
      error: (error) => {
        console.log(error);
      }
    })
  }

  $("#shade").click(() => {
    $("#shade").toggle();
    $("#single-nucleus-card").fadeToggle();
  })

  $('.cell').on('click', (event) => {
    let label = $(event.target).attr('data_label');
    $('#nucleus-label').text(label)
    $('#mark-as-positive').hide()
    $('#mark-as-negative').hide()
    if (label === 'positive')
      $('#mark-as-negative').show()
    else
      $('#mark-as-positive').show()
    let cell_id = $(event.target).attr('data_value');
    $('#nucleus-id').text(cell_id)
    render_rgb_nucleus(cell_id);
  });

  $('#treated').on('click', (event) => {
    let cell_id = $(event.target).attr('data-value');
    $.ajax({
      url: `/scanned_cells/treat/${cell_id}`,
      success: (response) => {
        $("#channel-paths").text('')
        $("#channel-paths").text((JSON.stringify(response)));
        $("#single-nucleus").attr('src', response.treated);
        $('#original').attr('data-value', cell_id);
        $('#original').removeAttr('hidden');
        $('#treated').attr('hidden', 'hidden');
        render_image_card();
      },
      error: (error) => {
        console.log(error);
      }
    })
  });

  $('#original').on('click', (event) => {
    let cell_id = $(event.target).attr('data-value');
    render_rgb_nucleus(cell_id);
  })

</script>

<script>

  function find_channels(){
    let blue = $("#blue-channel").hasClass('with-blue');
    let green = $("#green-channel").hasClass('with-green');
    let red = $("#red-channel").hasClass('with-red');
    return { "blue": blue, "green": green, "red": red };
  }

  function reload_image(){
    const image_paths = JSON.parse($("#channel-paths").text());
    let channels = find_channels();
    let nucleus_image = $('#single-nucleus');
    if (channels["blue"] && channels["green"] && channels["red"]){
      if (image_paths.rgb)
        nucleus_image.attr('src', image_paths.rgb);
      else
        nucleus_image.attr('src', image_paths.treated);
    } else if (channels["blue"]){
      if (channels["red"])
        nucleus_image.attr('src', image_paths.blue_red);
      else if (channels["green"])
        nucleus_image.attr('src', image_paths.blue_green);
      else
        nucleus_image.attr('src', image_paths.blue);
    } else if (channels["red"]){
      if (channels["green"])
        nucleus_image.attr('src', image_paths.green_red);
      else
        nucleus_image.attr('src', image_paths.red);
    } else
      nucleus_image.attr('src', image_paths.green);
  }

  $("#blue-channel").click(() => {
    let blue = $("#blue-channel");
    if (blue.hasClass('with-blue')){
      blue.removeClass('with-blue');
      blue.removeClass('btn-primary');
      blue.addClass('btn-outline-primary');
    }else{
      blue.removeClass('btn-outline-primary');
      blue.addClass('btn-primary');
      blue.addClass('with-blue');
    }
    reload_image();
  })

  $("#red-channel").click(() => {
    let red = $("#red-channel");
    if (red.hasClass('with-red')){
      red.removeClass('with-red');
      red.removeClass('btn-danger');
      red.addClass('btn-outline-danger');
    }else{
      red.removeClass('btn-outline-danger');
      red.addClass('btn-danger');
      red.addClass('with-red');
    }
    reload_image();
  });

  $("#green-channel").click(() => {
    let green = $("#green-channel");
    if (green.hasClass('with-green')){
      green.removeClass('with-green');
      green.removeClass('btn-success');
      green.addClass('btn-outline-success');
    }else{
      green.removeClass('btn-outline-success');
      green.addClass('btn-success');
      green.addClass('with-green');
    }
    reload_image();
  });

  $('#mark-as-negative').on('click', (event) => {
    let cell_id = $('#nucleus-id').text();
    $.ajax({
      url: `/scanned_cells/${cell_id}/change_label?label=negative`,
      method: 'patch',
      success: (response) => {
        $('#mark-as-negative').fadeToggle();
        $('#mark-as-positive').fadeToggle();
        $(`#cell-${cell_id}`).removeClass('border-success');
        $(`#cell-${cell_id}`).addClass('border-danger');
        $(`#cell-${cell_id}`).children().first().attr('data_label', 'negative')
      },
      error: (error) => {
        console.log(error);
      }
    })
  })

  $('#mark-as-positive').on('click', (event) => {
    let cell_id = $('#nucleus-id').text();
    $.ajax({
      url: `/scanned_cells/${cell_id}/change_label?label=positive`,
      method: 'patch',
      success: (response) => {
        $('#mark-as-negative').fadeToggle();
        $('#mark-as-positive').fadeToggle();
        $(`#cell-${cell_id}`).removeClass('border-danger');
        $(`#cell-${cell_id}`).addClass('border-success');
        $(`#cell-${cell_id}`).children().first().attr('data_label', 'positive')
      },
      error: (error) => {
        console.log(error);
      }
    })
  })

</script>
